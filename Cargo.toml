[workspace]
members = [ "vn-extractord-core","vn-extractord", "vn-database-conn", "vn-dbtester"]
resolver = "2"

[workspace.package]
version = "0.1.0"
edition = "2021"
rust-version = "1.84.1"
homepage = "https://github.com/thebashpotato/vybe-check-challenge"
repository = "https://github.com/thebashpotato/vybe-check-challenge"
description = "Vybe Network Extractor Daemon Software"
authors = ["matt.k.williams@protonmail.com"]
license = "None"

[workspace.dependencies]
cargo-husky = { version = "1.5.0", features = [
    "precommit-hook",
    "prepush-hook",
    "run-cargo-test",
    "run-cargo-clippy",
] }
thiserror = "2.0.11"
tokio = "1.43.0"
phoenix-sdk = "0.8.0"
serde = { version = "1", features = ["derive"] }
serde_json = "1"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
diesel = { version = "2.2.0", features = ["postgres"] }
dotenvy = "0.15"
clap = { version = "4.5.31", features = ["derive"] }
anyhow = "1.0.96"

[profile.release]
codegen-units = 1
incremental = false
strip = true        # Automatically strip symbols from the binary.
opt-level = "z"     # Optimize for size
lto = true          # optimize at the linking stage

[profile.dist]
inherits = "release"

[workspace.lints.rust]
unsafe_code = "forbid"

[workspace.lints.clippy]
# Deny rules
perf = { level = "deny", priority = -1 }
style = { level = "deny", priority = -1 }
pedantic = { level = "deny", priority = -1 }
correctness = { level = "deny", priority = -1 }
complexity = { level = "deny", priority = -1 }
as_underscore = "deny"
assertions_on_result_states = "deny"
clone_on_ref_ptr = "deny"
create_dir = "deny"
dbg_macro = "deny"
decimal_literal_representation = "deny"
default_numeric_fallback = "deny"
empty_drop = "deny"
empty_structs_with_brackets = "deny"
exit = "deny"
filetype_is_file = "deny"
float_cmp_const = "deny"
fn_to_numeric_cast_any = "deny"
format_push_string = "deny"
get_unwrap = "deny"
integer_division = "deny"
lossy_float_literal = "deny"
mem_forget = "deny"
mixed_read_write_in_expression = "deny"
mutex_atomic = "deny"
needless_raw_strings = "deny"
non_ascii_literal = "deny"
panic = "deny"
print_stderr = "deny"
pub_without_shorthand = "deny"
rc_buffer = "deny"
rc_mutex = "deny"
redundant_type_annotations = "deny"
ref_patterns = "deny"
rest_pat_in_fully_bound_structs = "deny"
same_name_method = "deny"
string_add = "deny"
string_lit_chars_any = "deny"
string_slice = "deny"
string_to_string = "deny"
suspicious_xor_used_as_pow = "deny"
todo = "deny"
try_err = "deny"
unimplemented = "deny"
unnecessary_self_imports = "deny"
unneeded_field_pattern = "deny"
unseparated_literal_suffix = "deny"
if_then_some_else_none = "deny"
unwrap_used = "deny"
unwrap_in_result = "deny"
struct_excessive_bools = "deny"

# Warning rules
missing_errors_doc = { level = "warn", priority = 1 }
missing_panics_doc = { level = "warn", priority = 1 }
missing_docs_in_private_items = { level = "warn", priority = 1 }
needless_bool = { level = "warn", priority = 1 }

# Allow Rules
mod_module_files = "allow"
assertions_on_constants = "allow"
self_named_module_files = "allow"
used_underscore_binding = { level = "allow", priority = 1 }
must_use_candidate = { level = "allow", priority = 1 }
module_name_repetitions = { level = "allow", priority = 1 }
too_many_lines = { level = "allow", priority = 1 }
implicit_hasher = { level = "allow", priority = 1 }
if_not_else = { level = "allow", priority = 1 }
return_self_not_must_use = { level = "allow", priority = 1 }
inconsistent_struct_constructor = { level = "allow", priority = 1 }
match_wildcard_for_single_variants = { level = "allow", priority = 1 }
unnested_or_patterns = { level = "allow", priority = 1 }
similar_names = { level = "allow", priority = 1 }
struct_field_names = { level = "allow", priority = 1 }
use_debug = "allow"
result_large_err = "allow"
bool_assert_comparison = "allow"
cast_possible_wrap = "allow"
unreadable_literal = "allow"

